name: Deploy Backend (EC2 + systemd)

on:
  push:
    branches: [ main ]
    paths:
      - 'server/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch: {}

concurrency:
  group: deploy-backend
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Archive server
        run: |
          cd server
          rm -rf node_modules
          zip -r ../server.zip .

      - name: Copy bundle to EC2 (via SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}         # 可以是 ec2-user 或 deploy（见下方说明）
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "server.zip"
          target: "/tmp"                            # 上传到临时目录

      - name: Deploy on EC2 & restart myapp (systemd)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail
      
            APP_ROOT=/var/www/myapp
            APP_DIR=$APP_ROOT/current
            ENV_FILE=$APP_ROOT/shared/.env
            ZIP=/tmp/server.zip
      
            # 目录准备
            sudo mkdir -p "$APP_DIR" "$APP_ROOT/shared"
            sudo chown -R deploy:deploy "$APP_ROOT"
      
            # 如你用 Secrets 同步 .env（可选）
            if [ -n "${{ secrets.BACKEND_ENV_BASE64 || '' }}" ]; then
              echo "${{ secrets.BACKEND_ENV_BASE64 }}" | base64 -d | sudo tee "$ENV_FILE" >/dev/null
              sudo chown deploy:deploy "$ENV_FILE"
              sudo chmod 600 "$ENV_FILE"
            fi
      
            # 把 /tmp/server.zip 挪到代码目录并改属主
            sudo mv "$ZIP" "$APP_DIR"/server.zip
            sudo chown deploy:deploy "$APP_DIR"/server.zip
      
            # 下面都以 deploy 身份执行
            sudo -u deploy bash -lc "
              set -e
              cd '$APP_DIR'
      
              # 确保 Prisma 能读到环境变量：把 shared/.env 链接为项目根 .env  ← ★ 新增
              ln -sf '$ENV_FILE' .env
      
              # 如使用 nvm
              if command -v nvm >/dev/null 2>&1; then
                . ~/.nvm/nvm.sh
                nvm install 20 >/dev/null 2>&1 || true
                nvm use 20 || true
              fi
      
              unzip -o server.zip
              rm -f server.zip
      
              npm ci
              # 这里 Prisma 就能从 ./\.env 读到 DATABASE_URL 了
              npx prisma migrate deploy || true
              [ -f tsconfig.json ] && npm run build
            "
      
            sudo systemctl restart myapp
            sudo systemctl status --no-pager --full myapp || true
